{"version":3,"file":"call_rooms.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA,+BAA+B,aAAa;AAC5C;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpBA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD,kBAAkB,gCAAgC;AAClD,KAAK;AACL;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCvEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACoK;AAC/G;AACrD;AACA,mBAAmB,yCAAyC;AAC5D;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA;AACA,iDAAiD,+DAA+D;AAChH;AACA,CAAC;AACD;AACA;AACA;AACA,iDAAiD,8CAA8C;AAC/F;AACA,CAAC;AACD;AACA;AACA;AACA,+CAA+C,cAAc,cAAc,OAAO;AAClF,wFAAwF,MAAM;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6CAA6C,+EAA+E;AAC5H;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,IAAI,8DAAU,sBAAsB,WAAW;AAC/C;AACA;AACA;AACA,mCAAmC,gFAA4B;AAC/D,8BAA8B,iFAA6B;AAC3D;AACA;AACA;AACA,KAAK;AACL,gCAAgC,SAAS;AACzC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,IAAI,uEAAmB,gDAAgD,sCAAsC;AAC7G,IAAI,sEAAkB;AACtB,IAAI,sEAAkB;AACtB,CAAC;AACD","sources":["webpack://communications/./apps/calls/assets/ts/components/notify/index.ts","webpack://communications/./apps/calls/assets/ts/components/videos/index.ts","webpack://communications/webpack/bootstrap","webpack://communications/webpack/runtime/define property getters","webpack://communications/webpack/runtime/hasOwnProperty shorthand","webpack://communications/webpack/runtime/make namespace object","webpack://communications/./apps/calls/assets/ts/main/call_rooms/main.ts"],"sourcesContent":["const NOTIFY_CLASS = 'notify';\nconst NOTIFY_ACTIVE_CLASS = `${NOTIFY_CLASS}--active`;\nconst NOTIFY_TEXT_CLASS = 'notify__text';\nconst notify = document.querySelector(`.${NOTIFY_CLASS}`);\nif (!notify) {\n    throw Error('Not found notify container!');\n}\nconst notifyText = notify.querySelector(`.${NOTIFY_TEXT_CLASS}`);\nif (!notifyText) {\n    throw Error('Not found notify text container!');\n}\nexport const closeNotify = () => notify.classList.remove(NOTIFY_ACTIVE_CLASS);\nlet notifyTimeoutId;\nexport const showNotify = (message, timeout = Infinity) => {\n    clearTimeout(notifyTimeoutId);\n    notifyText.textContent = message;\n    notify.classList.add(NOTIFY_ACTIVE_CLASS);\n    if (timeout !== Infinity) {\n        notifyTimeoutId = setTimeout(closeNotify, timeout);\n    }\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst localeVideo = document.querySelector('.video__current-user');\nconst remoteVideo = document.querySelector('.video__another-user');\nconst videoControlsContainer = document.querySelector('.call-controls');\nif (!videoControlsContainer) {\n    throw Error('Not found video controls container!');\n}\nif (!localeVideo) {\n    throw Error('Not found locale video container!');\n}\nif (!remoteVideo) {\n    throw Error('Not found remote video container!');\n}\nconst closeButton = videoControlsContainer.querySelector('.call-controls__close');\nconst muteButton = videoControlsContainer.querySelector('.call-controls__mute');\nconst hideButton = videoControlsContainer.querySelector('.call-controls__hide');\nif (!closeButton || !muteButton || !hideButton) {\n    throw Error('Not found some controls buttons in video controls container!');\n}\nconst CONSTRAINTS = {\n    audio: true,\n    video: {\n        width: { min: 300, ideal: 500, max: 500 },\n        height: { min: 300, ideal: 500, max: 500 },\n    },\n};\nconst getLocalMediaStream = () => __awaiter(void 0, void 0, void 0, function* () {\n    return yield navigator.mediaDevices.getUserMedia(CONSTRAINTS);\n});\nexport const createAndSetLocalMediaStream = () => __awaiter(void 0, void 0, void 0, function* () {\n    let localMediaStream;\n    try {\n        localMediaStream = yield getLocalMediaStream();\n    }\n    catch (error) {\n        console.error(error);\n        throw error;\n    }\n    return (localeVideo.srcObject = localMediaStream);\n});\nexport const createAndSetRemoteMediaStream = () => {\n    return (remoteVideo.srcObject = new MediaStream());\n};\nexport const addCloseCallHandler = (callback) => {\n    closeButton.onclick = callback;\n};\nexport const addMuteCallHandler = (localMediaStream) => {\n    muteButton.onclick = () => {\n        const audioTrack = localMediaStream.getTracks().find((track) => track.kind === 'audio');\n        if (!audioTrack) {\n            return;\n        }\n        audioTrack.enabled = !audioTrack.enabled;\n    };\n};\nexport const addHideCallHandler = (localMediaStream) => {\n    hideButton.onclick = () => {\n        const videoTrack = localMediaStream.getTracks().find((track) => track.kind === 'video');\n        if (!videoTrack) {\n            return;\n        }\n        videoTrack.enabled = !videoTrack.enabled;\n    };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createAndSetLocalMediaStream, createAndSetRemoteMediaStream, addCloseCallHandler, addMuteCallHandler, addHideCallHandler, } from '../../components/videos';\nimport { showNotify } from '../../components/notify';\nconst RTC_CONFIGURATION = {\n    iceServers: [{ urls: ['stun:stun2.1.google.com:19302'] }],\n};\nconst peerConnection = new RTCPeerConnection(RTC_CONFIGURATION);\nlet callRoomsWebSocket;\npeerConnection.addEventListener('icecandidate', ({ candidate }) => {\n    if (candidate) {\n        console.log('Sending ICE candidate:', candidate);\n        callRoomsWebSocket.send(JSON.stringify({ type: \"candidate\" /* ActionType.candidate */, data: candidate }));\n    }\n});\npeerConnection.addEventListener('connectionstatechange', () => {\n    if (peerConnection.connectionState === 'connected') {\n        console.log('connected');\n        callRoomsWebSocket.send(JSON.stringify({ type: \"connected\" /* ActionType.connected */ }));\n    }\n});\nconst startCommunication = () => {\n    console.log('Start communication');\n    const roomId = location.pathname.split('/').filter(Boolean).at(-1);\n    callRoomsWebSocket = new WebSocket(`ws://${location.host}/call-rooms/${roomId}/`);\n    callRoomsWebSocket.onmessage = (_a) => __awaiter(void 0, [_a], void 0, function* ({ data }) {\n        const parsedData = JSON.parse(data);\n        console.log('Received data:', parsedData);\n        switch (parsedData.type) {\n            case \"offer\" /* ActionType.offer */: {\n                yield setLocalOffer();\n                return sendOffer();\n            }\n            case \"answer\" /* ActionType.answer */: {\n                yield setRemoteOffer(parsedData.data);\n                yield setLocalAnswer();\n                return sendAnswer();\n            }\n            case \"final\" /* ActionType.final */: {\n                return yield setRemoteAnswer(parsedData.data);\n            }\n            case \"candidate\" /* ActionType.candidate */: {\n                return yield setCandidate(parsedData.data);\n            }\n            case \"close\" /* ActionType.close */: {\n                return void (location.href = window.homePath);\n            }\n            case \"time.limit\" /* ActionType.timeLimit */: {\n                return showTimeLimit(parsedData.data);\n            }\n            default: {\n                return console.error('Unknown Action type in the call room script!');\n            }\n        }\n    });\n};\nconst setLocalOffer = () => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Create offer');\n    const offer = yield peerConnection.createOffer();\n    console.log('Set offer in local description');\n    yield peerConnection.setLocalDescription(offer);\n});\nconst sendOffer = () => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Send offer');\n    callRoomsWebSocket.send(JSON.stringify({\n        type: \"offer\" /* ActionType.offer */,\n        data: peerConnection.localDescription,\n    }));\n});\nconst setRemoteOffer = (receivedOffer) => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Set remote offer');\n    const offer = new RTCSessionDescription(receivedOffer);\n    yield peerConnection.setRemoteDescription(offer);\n});\nconst setLocalAnswer = () => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Create answer');\n    const answer = yield peerConnection.createAnswer();\n    yield peerConnection.setLocalDescription(answer);\n});\nconst sendAnswer = () => {\n    console.log('Send answer');\n    callRoomsWebSocket.send(JSON.stringify({ type: \"answer\" /* ActionType.answer */, data: peerConnection.localDescription }));\n};\nconst setRemoteAnswer = (receivedAnswer) => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Set remote answer');\n    const answer = new RTCSessionDescription(receivedAnswer);\n    yield peerConnection.setRemoteDescription(answer);\n});\nconst setCandidate = (iceCandidate) => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Adding candidate');\n    try {\n        yield peerConnection.addIceCandidate(new RTCIceCandidate(iceCandidate));\n    }\n    catch (error) {\n        console.error('Error adding ICE candidate', error);\n    }\n});\nconst showTimeLimit = (timeLimit) => {\n    showNotify(`You will talk for ${timeLimit} minutes!`);\n};\nconst init = () => __awaiter(void 0, void 0, void 0, function* () {\n    console.log('Initializing media streams');\n    const localMediaStream = yield createAndSetLocalMediaStream();\n    const remoteMediaStream = createAndSetRemoteMediaStream();\n    localMediaStream.getTracks().forEach((track) => {\n        console.log('Local media steams set');\n        peerConnection.addTrack(track, localMediaStream);\n    });\n    peerConnection.ontrack = ({ streams }) => {\n        console.log('Received remote stream:', streams[0]);\n        streams[0].getTracks().forEach((track) => {\n            remoteMediaStream.addTrack(track);\n        });\n    };\n    startCommunication();\n    addCloseCallHandler(() => callRoomsWebSocket.send(JSON.stringify({ type: \"close\" /* ActionType.close */ })));\n    addMuteCallHandler(localMediaStream);\n    addHideCallHandler(localMediaStream);\n});\ninit();\n"],"names":[],"sourceRoot":""}