{"version":3,"file":"call_offers.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,qDAAqD,kBAAkB;AACvE,qDAAqD,4BAA4B;AACjF,oDAAoD,2BAA2B;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACtCA;AACA,+BAA+B,aAAa;AAC5C;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCpBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNqD;AACA;AACrD,0DAA0D,MAAM;AAChE;AACA;AACA;AACA;AACA,gDAAgD,4EAA4E;AAC5H,iDAAiD,8EAA8E;AAC/H,YAAY,8DAAU,uBAAuB,yBAAyB;AACtE;AACA;AACA;AACA,YAAY,8DAAU;AACtB;AACA;AACA;AACA;AACA,6CAA6C,qBAAqB,aAAa,OAAO;AACtF;AACA;AACA;AACA,CAAC","sources":["webpack://communications/./apps/calls/ts/components/dialog/index.ts","webpack://communications/./apps/calls/ts/components/notify/index.ts","webpack://communications/webpack/bootstrap","webpack://communications/webpack/runtime/define property getters","webpack://communications/webpack/runtime/hasOwnProperty shorthand","webpack://communications/webpack/runtime/make namespace object","webpack://communications/./apps/calls/ts/scripts/call_offers/main.ts"],"sourcesContent":["const DIALOG_CLASS = 'dialog';\nconst DIALOG_ACTIVE_CLASS = `${DIALOG_CLASS}--active`;\nconst DIALOG_TEXT_CLASS = 'dialog__text';\nconst DIALOG_SUCCESS_BUTTON_CLASS = 'dialog__yes';\nconst DIALOG_CANCEL_BUTTON_CLASS = 'dialog__no';\nconst dialog = document.querySelector(`.${DIALOG_CLASS}`);\nif (!dialog) {\n    throw Error('Not found dialog container!');\n}\nconst dialogTextContainer = dialog.querySelector(`.${DIALOG_TEXT_CLASS}`);\nconst dialogSuccessButton = dialog.querySelector(`.${DIALOG_SUCCESS_BUTTON_CLASS}`);\nconst dialogCancelButton = dialog.querySelector(`.${DIALOG_CANCEL_BUTTON_CLASS}`);\nif (!dialogTextContainer) {\n    throw Error('Not found dialog text container');\n}\nif (!dialogSuccessButton) {\n    throw Error('Not found dialog success button');\n}\nif (!dialogCancelButton) {\n    throw Error('Not found dialog cancel button');\n}\nexport const closeDialog = () => dialog.classList.remove(DIALOG_ACTIVE_CLASS);\nlet dialogTimeoutId;\nexport const showDialog = (message, cancelCallback, successCallback, timeout = Infinity) => {\n    clearTimeout(dialogTimeoutId);\n    dialogTextContainer.textContent = message;\n    dialog.classList.add(DIALOG_ACTIVE_CLASS);\n    dialogCancelButton.onclick = () => {\n        cancelCallback();\n        closeDialog();\n    };\n    dialogSuccessButton.onclick = () => {\n        successCallback();\n        closeDialog();\n    };\n    if (timeout != Infinity) {\n        setTimeout(closeDialog, timeout);\n    }\n};\n","const NOTIFY_CLASS = 'notify';\nconst NOTIFY_ACTIVE_CLASS = `${NOTIFY_CLASS}--active`;\nconst NOTIFY_TEXT_CLASS = 'notify__text';\nconst notify = document.querySelector(`.${NOTIFY_CLASS}`);\nif (!notify) {\n    throw Error('Not found notify container!');\n}\nconst notifyText = notify.querySelector(`.${NOTIFY_TEXT_CLASS}`);\nif (!notifyText) {\n    throw Error('Not found notify text container!');\n}\nexport const closeNotify = () => notify.classList.remove(NOTIFY_ACTIVE_CLASS);\nlet notifyTimeoutId;\nexport const showNotify = (message, timeout = Infinity) => {\n    clearTimeout(notifyTimeoutId);\n    notifyText.textContent = message;\n    notify.classList.add(NOTIFY_ACTIVE_CLASS);\n    if (timeout !== Infinity) {\n        notifyTimeoutId = setTimeout(closeNotify, timeout);\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { showNotify } from '../../components/notify';\nimport { showDialog } from '../../components/dialog';\nwindow.callOffersWebSocket.addEventListener('message', ({ data }) => {\n    const parsedData = JSON.parse(data);\n    switch (parsedData.type) {\n        case \"offer.connection\" /* ActionType.offerConnection */: {\n            const subscriberData = parsedData.data;\n            const cancelData = JSON.stringify({ type: \"offer.cancel\" /* ActionType.offerCancel */, data: subscriberData.id });\n            const successData = JSON.stringify({ type: \"offer.success\" /* ActionType.offerSuccess */, data: subscriberData.id });\n            showDialog(`You was offered by ${subscriberData.full_name}. Do you want take a call?`, () => window.callOffersWebSocket.send(cancelData), () => window.callOffersWebSocket.send(successData));\n            break;\n        }\n        case \"offer.cancel\" /* ActionType.offerCancel */: {\n            showNotify('Your call request was refused!');\n            break;\n        }\n        case \"offer.success\" /* ActionType.offerSuccess */: {\n            const roomId = parsedData.data;\n            window.location.href = `http://${window.location.host}/call-room/${roomId}`;\n            break;\n        }\n    }\n});\n"],"names":[],"sourceRoot":""}